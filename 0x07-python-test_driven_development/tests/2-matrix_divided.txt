============================
The ``2-matrix_divided`` module
============================
---------------------
Using ``matrix_divided``
---------------------

Importing the function:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking if it's a matrix if div if even:
>>> matrix_divided([[2, 4, 6],[10, 20, 30]], 2)
[[1.0, 2.0, 3.0], [5.0, 10.0, 15.0]]

Checking if it's a matrix if div is odd:
>>> matrix_divided([[2, 4, 6],[10, 20, 30]], 3)
[[0.67, 1.33, 2.0], [3.33, 6.67, 10.0]]

Checking if it's a matrix:
>>> matrix_divided(1, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking if it's a matrix if div is odd:
>>> matrix_divided([[2,"hola", 6],[10, "mundo", 30]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking if it's a matrix if div is odd:
>>> matrix_divided([[2, "hola", 6],[10, "mundo", 30]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking if it's a matrix if div is odd:
>>> matrix_divided([[2, 4, 6],[10, 20, 30]], 'a')
Traceback (most recent call last):
...
TypeError: div must be a number

Checking if it's a matrix if div is odd:
>>> matrix_divided([[2, 4, 6],[10, 20, 30]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[3, 4]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'